import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Drawer from "@mui/material/Drawer";
import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemText from "@mui/material/ListItemText";
import CssBaseline from "@mui/material/CssBaseline";
import Toolbar from "@mui/material/Toolbar";
import Box from "@mui/material/Box";
import Typography from "@mui/material/Typography";
import Link from "next/link";
import { usePathname } from "next/navigation";
import { AuthProvider, useAuth } from "./AuthProvider";
import Button from "@mui/material/Button";
import Sidebar from "./Sidebar";
import ThemeRegistry from './ThemeRegistry';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Для выделения активного пункта меню
  // (usePathname работает только в клиентском компоненте, поэтому Drawer будет простым)
  const navItems = [
    { label: "Главная", href: "/" },
    { label: "Курсы", href: "/courses" },
    { label: "Иерархия", href: "/hierarchy" },
    { label: "Личный кабинет", href: "/profile" },
  ];

  return (
    <html lang="ru">
      <body
        style={{
          background: "linear-gradient(135deg, #e0e7ef 0%, #f7fafd 100%)",
          color: "#181818",
          fontFamily: 'Inter, Arial, sans-serif',
          minHeight: '100vh',
          margin: 0,
        }}
        className={`${geistSans.variable} ${geistMono.variable}`}
      >
        <AuthProvider>
          <ThemeRegistry>
            <Box sx={{ display: 'flex' }}>
              <Sidebar />
              <Box component="main" sx={{ flexGrow: 1, p: { xs: 2, sm: 4 }, minHeight: '100vh' }}>
                {children}
              </Box>
            </Box>
          </ThemeRegistry>
        </AuthProvider>
      </body>
    </html>
  );
}
